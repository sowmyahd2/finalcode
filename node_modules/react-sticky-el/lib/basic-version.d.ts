import React, { CSSProperties, ReactNode } from 'react';
import type { CommonProps } from './types';
export interface Props extends CommonProps {
    /**
     * Class name to be applied to the sticky element when it is fixed.
     * @default {}
     */
    stickyStyle: CSSProperties;
    /**
     * Class name to be applied to the sticky element when it is fixed.
     * @default 'sticky'
     */
    stickyClassName: string;
    /**
     * Class name to be applied to the wrapper element.
     * @default ''
     */
    wrapperClassName: string;
    children?: ReactNode;
}
declare function Sticky(props: Props): React.JSX.Element;
declare namespace Sticky {
    var defaultProps: {
        stickyClassName: string;
        wrapperClassName: string;
        stickyStyle: {};
        mode: string;
        topOffset: number;
        bottomOffset: number;
        isIOSFixEnabled: boolean;
        offsetTransforms: boolean;
        disabled: boolean;
        onFixedToggle: null;
        boundaryElement: null;
        hideOnBoundaryHit: boolean;
        scrollElement: string;
        dontUpdateHolderHeightWhenSticky: boolean;
    };
}
export default Sticky;
