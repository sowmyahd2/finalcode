{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport BASE_URL from '../../Config/Api';\nalert(BASE_URL);\nexport const fetchcity = createAsyncThunk('city/fetchcity', async () => {\n  try {\n    const response = await fetch(`${BASE_URL}city`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const setCityname = createAsyncThunk('city/setCity', async _ref => {\n  let {\n    city,\n    pincode\n  } = _ref;\n  try {\n    const response = await fetch(`${BASE_URL}getcityname/${city}/${pincode}`);\n    const json = await response.json();\n    localStorage.setItem('selectedCity', json.data.CityName.toLowerCase());\n    localStorage.setItem('selectedpincode', json.data.Pincode);\n    return {\n      city: json.data.CityName.toLowerCase(),\n      pincode: json.data.Pincode\n    };\n  } catch (error) {\n    // Handle error\n    throw error;\n  }\n});\nexport const citySlice = createSlice({\n  name: 'city',\n  initialState: {\n    isLoading: false,\n    isError: false,\n    cityList: [],\n    selectedCity: localStorage.getItem('selectedCity') || '',\n    selectedpincode: \"\",\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchcity.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n      state.error = null;\n    }).addCase(fetchcity.fulfilled, (state, action) => {\n      state.cityList = action.payload.data;\n      state.isLoading = false;\n      state.isError = false;\n      state.error = null;\n    }).addCase(setCityname.fulfilled, (state, action) => {\n      state.selectedCity = action.payload.city;\n      state.selectedpincode = action.payload.pincode;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(fetchcity.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.error = action.error.message;\n    });\n  }\n});\nexport default citySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","BASE_URL","alert","fetchcity","response","fetch","ok","Error","status","json","console","log","error","setCityname","_ref","city","pincode","localStorage","setItem","data","CityName","toLowerCase","Pincode","citySlice","name","initialState","isLoading","isError","cityList","selectedCity","getItem","selectedpincode","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/CitySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport BASE_URL from  '../../Config/Api';\r\nalert(BASE_URL);\r\nexport const fetchcity = createAsyncThunk('city/fetchcity', async () => {\r\n  try {\r\n\r\n    const response = await fetch(`${BASE_URL}city`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return json;\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n    throw error;\r\n  }\r\n});\r\nexport const setCityname = createAsyncThunk('city/setCity', async ({city,pincode}) => {\r\n  try {\r\n  \r\n    const response = await fetch(`${BASE_URL}getcityname/${city}/${pincode}`);\r\n    const json = await response.json();\r\n    localStorage.setItem('selectedCity', json.data.CityName.toLowerCase());\r\n    localStorage.setItem('selectedpincode', json.data.Pincode);\r\n    return {\r\n      city:(json.data.CityName).toLowerCase(),\r\n      pincode:json.data.Pincode\r\n    };\r\n  } catch (error) {\r\n    // Handle error\r\n    throw error;\r\n  }\r\n});\r\nexport const citySlice = createSlice({\r\n  name: 'city',\r\n  initialState: {\r\n    isLoading: false,\r\n    isError: false,\r\n    cityList: [],\r\n    selectedCity: localStorage.getItem('selectedCity') || '',\r\n    selectedpincode:\"\",\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchcity.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchcity.fulfilled, (state, action) => {\r\n  \r\n        state.cityList = action.payload.data;\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(setCityname.fulfilled, (state, action) => {\r\n        state.selectedCity = action.payload.city;\r\n        state.selectedpincode = action.payload.pincode;\r\n        state.isLoading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchcity.rejected, (state, action) => {\r\n        \r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default citySlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}