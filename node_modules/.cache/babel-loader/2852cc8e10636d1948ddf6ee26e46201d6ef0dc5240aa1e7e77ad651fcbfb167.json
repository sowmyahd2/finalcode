{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport BASE_URL from '../../Config/apii';\nexport const fetchdepartment = createAsyncThunk('department/fetchdepartment', async () => {\n  try {\n    const response = await fetch(`${BASE_URL}department`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const getCategoryByDepartment = createAsyncThunk('department/getCategoryByDepartment', async _ref => {\n  let {\n    id\n  } = _ref;\n  try {\n    const response = await fetch(`${BASE_URL}department/category/${id}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const getstoresByDepartment = createAsyncThunk('department/getstoresByDepartment', async _ref2 => {\n  let {\n    id,\n    selectedcity\n  } = _ref2;\n  try {\n    const response = await fetch(`${BASE_URL}department/browseby/${id}/${selectedcity}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const getBrowseBySubCategory = createAsyncThunk('subcategory/getBrowseBySubCategory', async _ref3 => {\n  let {\n    id,\n    selectedcity\n  } = _ref3;\n  try {\n    const response = await fetch(`${BASE_URL}department/browseby/${id}/${selectedcity}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const getSubCategoryFilter = createAsyncThunk('subcategory/getSubCategoryFilters', async _ref4 => {\n  let {\n    id,\n    selectedcity\n  } = _ref4;\n  try {\n    const response = await fetch(`${BASE_URL}subcategory/filterlist/${id}/${selectedcity}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const subcategorySlice = createSlice({\n  name: 'department',\n  initialState: {\n    isLoading: false,\n    isError: false,\n    departments: [],\n    categoryDepartment: [],\n    storesDepartment: [],\n    subcategoryfilters: [],\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchdepartment.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n      state.error = null;\n    }).addCase(fetchdepartment.fulfilled, (state, action) => {\n      state.departments = action.payload.data;\n      state.isLoading = false;\n      state.isError = false;\n      state.error = null;\n    }).addCase(getCategoryByDepartment.fulfilled, (state, action) => {\n      state.categoryDepartment = action.payload.data;\n      state.isLoading = false;\n      state.isError = false;\n      state.error = null;\n    }).addCase(getSubCategoryFilter.fulfilled, (state, action) => {\n      state.subcategoryfilters = action.payload.data;\n      state.isLoading = false;\n      state.isError = false;\n      state.error = null;\n    }).addCase(getstoresByDepartment.fulfilled, (state, action) => {\n      state.storesDepartment = action.payload.data;\n      state.isLoading = false;\n      state.isError = false;\n      state.error = null;\n    }).addCase(fetchdepartment.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.error = action.error.message;\n    });\n  }\n});\nexport default subcategorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","BASE_URL","fetchdepartment","response","fetch","ok","Error","status","json","error","console","getCategoryByDepartment","_ref","id","getstoresByDepartment","_ref2","selectedcity","getBrowseBySubCategory","_ref3","getSubCategoryFilter","_ref4","subcategorySlice","name","initialState","isLoading","isError","departments","categoryDepartment","storesDepartment","subcategoryfilters","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/SubcategorySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport  BASE_URL  from '../../Config/apii';\r\n\r\nexport const fetchdepartment = createAsyncThunk('department/fetchdepartment', async () => {\r\n  try {\r\n\r\n    const response = await fetch(`${BASE_URL}department`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n    throw error;\r\n  }\r\n});\r\nexport const getCategoryByDepartment = createAsyncThunk('department/getCategoryByDepartment', async ({id}) => {\r\n  try {\r\n\r\n    const response = await fetch(`${BASE_URL}department/category/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n    throw error;\r\n  }\r\n});\r\nexport const getstoresByDepartment = createAsyncThunk('department/getstoresByDepartment', async ({id,selectedcity}) => {\r\n  try {\r\n\r\n    const response = await fetch(`${BASE_URL}department/browseby/${id}/${selectedcity}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n    throw error;\r\n  }\r\n});\r\nexport const getBrowseBySubCategory = createAsyncThunk('subcategory/getBrowseBySubCategory', async ({id,selectedcity}) => {\r\n  try {\r\n\r\n    const response = await fetch(`${BASE_URL}department/browseby/${id}/${selectedcity}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n    throw error;\r\n  }\r\n});\r\nexport const getSubCategoryFilter = createAsyncThunk('subcategory/getSubCategoryFilters', async ({id,selectedcity}) => {\r\n  try {\r\n\r\n    const response = await fetch(`${BASE_URL}subcategory/filterlist/${id}/${selectedcity}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\nexport const subcategorySlice = createSlice({\r\n  name: 'department',\r\n  initialState: {\r\n    isLoading: false,\r\n    isError: false,\r\n    departments: [],\r\n    categoryDepartment:[],\r\n    storesDepartment:[],\r\n    subcategoryfilters:[],\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchdepartment.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchdepartment.fulfilled, (state, action) => {\r\n  \r\n        state.departments = action.payload.data;\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(getCategoryByDepartment.fulfilled, (state, action) => {\r\n  \r\n        state.categoryDepartment = action.payload.data;\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(getSubCategoryFilter.fulfilled, (state, action) => {\r\n  \r\n        state.subcategoryfilters = action.payload.data;\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      \r\n      .addCase(getstoresByDepartment.fulfilled, (state, action) => {\r\n  \r\n        state.storesDepartment = action.payload.data;\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchdepartment.rejected, (state, action) => {\r\n        \r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default subcategorySlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}