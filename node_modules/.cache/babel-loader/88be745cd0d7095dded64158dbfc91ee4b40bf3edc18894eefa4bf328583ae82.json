{"ast":null,"code":"import Api from '../../Config/Api';\nimport Type from './Types';\nexport const getLogin = (email, password) => async dispatch => {\n  try {\n    const body = {\n      email,\n      password,\n      number: \"\"\n    };\n    const response = await Api.post('auth', body);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.loginSuccess,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: Type.loginFailure,\n        payload: response.message\n      });\n    }\n  } catch (error) {}\n};\nexport const mobileLogin = number => async dispatch => {\n  try {\n    const body = {\n      email: \"\",\n      password: \"\",\n      number\n    };\n    const response = await Api.post('auth', body);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.loginSuccess,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: Type.loginFailure,\n        payload: response.message\n      });\n    }\n  } catch (error) {}\n};\nexport const sendotp = (number, otp) => async dispatch => {\n  try {\n    const body = {\n      number,\n      otp\n    };\n    const response = await Api.post('user/sendotp', body);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.otpSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const changepass = (userid, password) => async dispatch => {\n  try {\n    const response = await Api.get('user/changepass/' + userid + '/' + password);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.changepass,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: Type.logOutSuccess\n  });\n};","map":{"version":3,"names":["Api","Type","getLogin","email","password","dispatch","body","number","response","post","message","type","loginSuccess","payload","data","loginFailure","error","mobileLogin","sendotp","otp","otpSuccess","changepass","userid","get","logout","logOutSuccess"],"sources":["D:/react/website/finalcode/src/Redux/Action/LoginAction.js"],"sourcesContent":["import Api from '../../Config/Api';\r\nimport Type from './Types';\r\n\r\n\r\n\r\nexport const getLogin = (email,password) => async dispatch => {\r\n    try{\r\n        const body = {\r\n            email,\r\n            password,\r\n            number:\"\"\r\n        }\r\n        \r\n        const response = await Api.post('auth',body)\r\n        \r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                type : Type.loginSuccess,\r\n                payload : response.data\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type :Type.loginFailure,\r\n                payload:response.message\r\n            })\r\n        }\r\n    }catch(error){ \r\n\r\n    }\r\n}\r\nexport const mobileLogin = (number) => async dispatch => {\r\n\r\n    try{\r\n        const body = {\r\n            email:\"\",\r\n            password:\"\",\r\n            number\r\n        }\r\n        \r\n        const response = await Api.post('auth',body)\r\n        \r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                type : Type.loginSuccess,\r\n                payload : response.data\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type :Type.loginFailure,\r\n                payload:response.message\r\n            })\r\n        }\r\n    }catch(error){ \r\n\r\n    }\r\n}\r\nexport const sendotp = (number,otp) => async dispatch => {\r\n \r\n    try{\r\n        const body = {\r\n            number,\r\n            otp,\r\n        }\r\n        \r\n        const response = await Api.post('user/sendotp',body)\r\n        \r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                type : Type.otpSuccess,\r\n                payload : response.data\r\n            })\r\n        \r\n        }\r\n    }catch(error){ \r\n\r\n    }\r\n    \r\n}\r\nexport const changepass = (userid,password) => async dispatch => {\r\n    try\r\n    {\r\n        \r\n        const response = await Api.get('user/changepass/'+userid+'/'+password)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.changepass,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type : Type.logOutSuccess\r\n    })\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,SAAS;AAI1B,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAACC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EAC1D,IAAG;IACC,MAAMC,IAAI,GAAG;MACTH,KAAK;MACLC,QAAQ;MACRG,MAAM,EAAC;IACX,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,MAAM,EAACH,IAAI,CAAC;IAE5C,IAAGE,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BL,QAAQ,CAAC;QACLM,IAAI,EAAGV,IAAI,CAACW,YAAY;QACxBC,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN,CAAC,MAAI;MACDT,QAAQ,CAAC;QACLM,IAAI,EAAEV,IAAI,CAACc,YAAY;QACvBF,OAAO,EAACL,QAAQ,CAACE;MACrB,CAAC,CAAC;IACN;EACJ,CAAC,QAAMM,KAAK,EAAC,CAEb;AACJ,CAAC;AACD,OAAO,MAAMC,WAAW,GAAIV,MAAM,IAAK,MAAMF,QAAQ,IAAI;EAErD,IAAG;IACC,MAAMC,IAAI,GAAG;MACTH,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,EAAE;MACXG;IACJ,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,MAAM,EAACH,IAAI,CAAC;IAE5C,IAAGE,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BL,QAAQ,CAAC;QACLM,IAAI,EAAGV,IAAI,CAACW,YAAY;QACxBC,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN,CAAC,MAAI;MACDT,QAAQ,CAAC;QACLM,IAAI,EAAEV,IAAI,CAACc,YAAY;QACvBF,OAAO,EAACL,QAAQ,CAACE;MACrB,CAAC,CAAC;IACN;EACJ,CAAC,QAAMM,KAAK,EAAC,CAEb;AACJ,CAAC;AACD,OAAO,MAAME,OAAO,GAAGA,CAACX,MAAM,EAACY,GAAG,KAAK,MAAMd,QAAQ,IAAI;EAErD,IAAG;IACC,MAAMC,IAAI,GAAG;MACTC,MAAM;MACNY;IACJ,CAAC;IAED,MAAMX,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,cAAc,EAACH,IAAI,CAAC;IAEpD,IAAGE,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BL,QAAQ,CAAC;QACLM,IAAI,EAAGV,IAAI,CAACmB,UAAU;QACtBP,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IAEN;EACJ,CAAC,QAAME,KAAK,EAAC,CAEb;AAEJ,CAAC;AACD,OAAO,MAAMK,UAAU,GAAGA,CAACC,MAAM,EAAClB,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EAC7D,IACA;IAEI,MAAMG,QAAQ,GAAG,MAAMR,GAAG,CAACuB,GAAG,CAAC,kBAAkB,GAACD,MAAM,GAAC,GAAG,GAAClB,QAAQ,CAAC;IACtE,IAAGI,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BL,QAAQ,CAAC;QACDM,IAAI,EAAGV,IAAI,CAACoB,UAAU;QACtBR,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAME,KAAK,EAAC,CAEd;AACR,CAAC;AACD,OAAO,MAAMQ,MAAM,GAAGA,CAAA,KAAMnB,QAAQ,IAAI;EACpCA,QAAQ,CAAC;IACLM,IAAI,EAAGV,IAAI,CAACwB;EAChB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}