{"ast":null,"code":"\"use strict\";\n\n// @flow strict\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst basicSelectors = {};\nif (typeof document !== 'undefined') {\n  basicSelectors.body = document.body;\n  basicSelectors.window = window;\n  basicSelectors.document = document;\n}\nconst matchesMethodName = (() => {\n  if (typeof document !== 'undefined' && document.body) {\n    const body = document.body;\n    return typeof body.matches === 'function' ? 'matches' : typeof body.webkitMatchesSelector === 'function' ? 'webkitMatchesSelector' :\n    //webkit\n    // @ts-expect-error - ts doesn't like vendors, so do I, but we have to support such case\n    typeof body.mozMatchesSelector === 'function' ? 'mozMatchesSelector' :\n    //mozilla\n    // @ts-expect-error - ts doesn't like vendors, so do I, but we have to support such case\n    typeof body.msMatchesSelector === 'function' ? 'msMatchesSelector' :\n    //ie\n    // @ts-expect-error - ts doesn't like vendors, so do I, but we have to support such case\n    typeof body.oMatchesSelector === 'function' ? 'oMatchesSelector' :\n    //old opera\n    null;\n  }\n  return null;\n})();\nfunction find(selector, el) {\n  if (!selector) {\n    return null;\n  }\n  // eslint-disable-next-line no-prototype-builtins\n  if (basicSelectors.hasOwnProperty(selector)) {\n    return basicSelectors[selector];\n  }\n  // select by id\n  if (selector[0] === '#') {\n    return document.getElementById(selector.slice(1));\n  }\n  if (matchesMethodName === null) {\n    return null;\n  }\n  let temp = el;\n  // eslint-disable-next-line no-cond-assign\n  while (temp = temp.parentElement) {\n    // @ts-expect-error - ts does not approve it, but it works fine :)\n    if (temp[matchesMethodName](selector)) {\n      return temp || null;\n    }\n  }\n  // nothing has been found :(\n  return null;\n}\nexports.default = find;","map":{"version":3,"names":["Object","defineProperty","exports","value","basicSelectors","document","body","window","matchesMethodName","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","find","selector","el","hasOwnProperty","getElementById","slice","temp","parentElement","default"],"sources":["D:/react/website/finalcode/node_modules/react-sticky-el/lib/helpers/find.js"],"sourcesContent":["\"use strict\";\n// @flow strict\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst basicSelectors = {};\nif (typeof document !== 'undefined') {\n    basicSelectors.body = document.body;\n    basicSelectors.window = window;\n    basicSelectors.document = document;\n}\nconst matchesMethodName = (() => {\n    if (typeof document !== 'undefined' && document.body) {\n        const body = document.body;\n        return typeof (body.matches) === 'function' ? 'matches' :\n            typeof (body.webkitMatchesSelector) === 'function' ? 'webkitMatchesSelector' : //webkit\n                // @ts-expect-error - ts doesn't like vendors, so do I, but we have to support such case\n                typeof (body.mozMatchesSelector) === 'function' ? 'mozMatchesSelector' : //mozilla\n                    // @ts-expect-error - ts doesn't like vendors, so do I, but we have to support such case\n                    typeof (body.msMatchesSelector) === 'function' ? 'msMatchesSelector' : //ie\n                        // @ts-expect-error - ts doesn't like vendors, so do I, but we have to support such case\n                        typeof (body.oMatchesSelector) === 'function' ? 'oMatchesSelector' : //old opera\n                            null;\n    }\n    return null;\n})();\nfunction find(selector, el) {\n    if (!selector) {\n        return null;\n    }\n    // eslint-disable-next-line no-prototype-builtins\n    if (basicSelectors.hasOwnProperty(selector)) {\n        return basicSelectors[selector];\n    }\n    // select by id\n    if (selector[0] === '#') {\n        return document.getElementById(selector.slice(1));\n    }\n    if (matchesMethodName === null) {\n        return null;\n    }\n    let temp = el;\n    // eslint-disable-next-line no-cond-assign\n    while (temp = temp.parentElement) {\n        // @ts-expect-error - ts does not approve it, but it works fine :)\n        if (temp[matchesMethodName](selector)) {\n            return temp || null;\n        }\n    }\n    // nothing has been found :(\n    return null;\n}\nexports.default = find;\n"],"mappings":"AAAA,YAAY;;AACZ;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,cAAc,GAAG,CAAC,CAAC;AACzB,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;EACjCD,cAAc,CAACE,IAAI,GAAGD,QAAQ,CAACC,IAAI;EACnCF,cAAc,CAACG,MAAM,GAAGA,MAAM;EAC9BH,cAAc,CAACC,QAAQ,GAAGA,QAAQ;AACtC;AACA,MAAMG,iBAAiB,GAAG,CAAC,MAAM;EAC7B,IAAI,OAAOH,QAAQ,KAAK,WAAW,IAAIA,QAAQ,CAACC,IAAI,EAAE;IAClD,MAAMA,IAAI,GAAGD,QAAQ,CAACC,IAAI;IAC1B,OAAO,OAAQA,IAAI,CAACG,OAAQ,KAAK,UAAU,GAAG,SAAS,GACnD,OAAQH,IAAI,CAACI,qBAAsB,KAAK,UAAU,GAAG,uBAAuB;IAAG;IAC3E;IACA,OAAQJ,IAAI,CAACK,kBAAmB,KAAK,UAAU,GAAG,oBAAoB;IAAG;IACrE;IACA,OAAQL,IAAI,CAACM,iBAAkB,KAAK,UAAU,GAAG,mBAAmB;IAAG;IACnE;IACA,OAAQN,IAAI,CAACO,gBAAiB,KAAK,UAAU,GAAG,kBAAkB;IAAG;IACjE,IAAI;EAC5B;EACA,OAAO,IAAI;AACf,CAAC,EAAE,CAAC;AACJ,SAASC,IAAIA,CAACC,QAAQ,EAAEC,EAAE,EAAE;EACxB,IAAI,CAACD,QAAQ,EAAE;IACX,OAAO,IAAI;EACf;EACA;EACA,IAAIX,cAAc,CAACa,cAAc,CAACF,QAAQ,CAAC,EAAE;IACzC,OAAOX,cAAc,CAACW,QAAQ,CAAC;EACnC;EACA;EACA,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACrB,OAAOV,QAAQ,CAACa,cAAc,CAACH,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,IAAIX,iBAAiB,KAAK,IAAI,EAAE;IAC5B,OAAO,IAAI;EACf;EACA,IAAIY,IAAI,GAAGJ,EAAE;EACb;EACA,OAAOI,IAAI,GAAGA,IAAI,CAACC,aAAa,EAAE;IAC9B;IACA,IAAID,IAAI,CAACZ,iBAAiB,CAAC,CAACO,QAAQ,CAAC,EAAE;MACnC,OAAOK,IAAI,IAAI,IAAI;IACvB;EACJ;EACA;EACA,OAAO,IAAI;AACf;AACAlB,OAAO,CAACoB,OAAO,GAAGR,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}