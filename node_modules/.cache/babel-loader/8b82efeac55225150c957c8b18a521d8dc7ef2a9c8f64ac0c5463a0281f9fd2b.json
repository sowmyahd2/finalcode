{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst BASE_URL = 'http://13.201.130.241/reactapi/public/v1/';\n// Create async thunk for fetching most viewed products\nexport const fetchMostViewedProducts = createAsyncThunk('products/fetchMostViewed', async (_ref, _ref2) => {\n  let {\n    selectedCity\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await fetch(`${BASE_URL}products/mostView/${selectedCity}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const fetchMostViewedstores = createAsyncThunk('stores/fetchMostViewed', async (_ref3, _ref4) => {\n  let {\n    selectedCity\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n  try {\n    const response = await fetch(`${BASE_URL}stores/mostview/${selectedCity}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\n// Create slice\nconst mostViewedSlice = createSlice({\n  name: 'mostViewed',\n  initialState: {\n    mostviewedproducts: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMostViewedProducts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchMostViewedProducts.fulfilled, (state, action) => {\n      state.mostviewedproducts = action.payload.data; // Assuming your API response structure\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(fetchMostViewedProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload; // The rejectedWithValue will provide this\n    });\n  }\n});\n\nexport default mostViewedSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","fetchMostViewedProducts","_ref","_ref2","selectedCity","rejectWithValue","response","fetch","ok","Error","data","json","error","message","fetchMostViewedstores","_ref3","_ref4","mostViewedSlice","name","initialState","mostviewedproducts","isLoading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/MostviewSlice.js"],"sourcesContent":["\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nconst BASE_URL = 'http://13.201.130.241/reactapi/public/v1/';\r\n// Create async thunk for fetching most viewed products\r\nexport const fetchMostViewedProducts = createAsyncThunk('products/fetchMostViewed', async ({ selectedCity }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}products/mostView/${selectedCity}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\nexport const fetchMostViewedstores = createAsyncThunk('stores/fetchMostViewed', async ({ selectedCity }, { rejectWithValue }) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}stores/mostview/${selectedCity}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return rejectWithValue(error.message);\r\n  }\r\n});\r\n// Create slice\r\nconst mostViewedSlice = createSlice({\r\n  name: 'mostViewed',\r\n  initialState: { mostviewedproducts: [], isLoading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchMostViewedProducts.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMostViewedProducts.fulfilled, (state, action) => {\r\n        state.mostviewedproducts = action.payload.data; // Assuming your API response structure\r\n        state.isLoading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMostViewedProducts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload; // The rejectedWithValue will provide this\r\n      });\r\n  },\r\n});\r\n\r\nexport default mostViewedSlice.reducer;\r\n"],"mappings":"AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,MAAMC,QAAQ,GAAG,2CAA2C;AAC5D;AACA,OAAO,MAAMC,uBAAuB,GAAGH,gBAAgB,CAAC,0BAA0B,EAAE,OAAAI,IAAA,EAAAC,KAAA,KAAiD;EAAA,IAA1C;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAAA,IAAE;IAAEG;EAAgB,CAAC,GAAAF,KAAA;EAC9H,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,qBAAoBI,YAAa,EAAC,CAAC;IAC5E,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOP,eAAe,CAACO,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CAAC,CAAC;AACF,OAAO,MAAMC,qBAAqB,GAAGhB,gBAAgB,CAAC,wBAAwB,EAAE,OAAAiB,KAAA,EAAAC,KAAA,KAAiD;EAAA,IAA1C;IAAEZ;EAAa,CAAC,GAAAW,KAAA;EAAA,IAAE;IAAEV;EAAgB,CAAC,GAAAW,KAAA;EAC1H,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,mBAAkBI,YAAa,EAAC,CAAC;IAC1E,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOP,eAAe,CAACO,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CAAC,CAAC;AACF;AACA,MAAMI,eAAe,GAAGlB,WAAW,CAAC;EAClCmB,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IAAEC,kBAAkB,EAAE,EAAE;IAAEC,SAAS,EAAE,KAAK;IAAET,KAAK,EAAE;EAAK,CAAC;EACvEU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,uBAAuB,CAACyB,OAAO,EAAGC,KAAK,IAAK;MACnDA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDa,OAAO,CAACxB,uBAAuB,CAAC2B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7DF,KAAK,CAACP,kBAAkB,GAAGS,MAAM,CAACC,OAAO,CAACpB,IAAI,CAAC,CAAC;MAChDiB,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACf,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDa,OAAO,CAACxB,uBAAuB,CAAC8B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF,eAAeb,eAAe,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}