{"ast":null,"code":"import mergeDeepRight from \"./mergeDeepRight.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\n\nvar partialObject = /*#__PURE__*/\n_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));\nexport default partialObject;","map":{"version":3,"names":["mergeDeepRight","_curry2","partialObject","f","o","props","call"],"sources":["D:/react/website/finalcode/node_modules/ramda/es/partialObject.js"],"sourcesContent":["import mergeDeepRight from \"./mergeDeepRight.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\n\nvar partialObject =\n/*#__PURE__*/\n_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));\n\nexport default partialObject;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,qBAAqB;AAChD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GACjB;AACAD,OAAO,CAAC,CAACE,CAAC,EAAEC,CAAC,KAAKC,KAAK,IAAIF,CAAC,CAACG,IAAI,CAAC,IAAI,EAAEN,cAAc,CAACI,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC;AAElE,eAAeH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}