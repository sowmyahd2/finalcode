{"ast":null,"code":"import Api from '../../Config/Api';\nimport Type from './Types';\nexport const getStore = (city, id) => async dispatch => {\n  try {\n    const response = await Api.get('stores/catstore/' + city + \"/\" + id);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.storeSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getcatStore = () => async dispatch => {\n  try {\n    const response = await Api.get('stores');\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.storecatSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMostViewStore = city => async dispatch => {\n  try {\n    const response = await Api.get('stores/mostview/' + city + '/0');\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.mostViewStoreSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};","map":{"version":3,"names":["Api","Type","getStore","city","id","dispatch","response","get","message","type","storeSuccess","payload","data","error","console","log","getcatStore","storecatSuccess","getMostViewStore","mostViewStoreSuccess"],"sources":["D:/react/website/finalcode/src/Redux/Action/StoreAction.js"],"sourcesContent":["import Api from '../../Config/Api';\r\nimport Type from './Types'\r\n\r\nexport const getStore = (city,id) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('stores/catstore/'+city+\"/\"+id)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.storeSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){  \r\n    console.log(error)\r\n        }\r\n\r\n}\r\nexport const getcatStore = () => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('stores')\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.storecatSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){  \r\n    console.log(error)\r\n        }\r\n\r\n}\r\nexport const getMostViewStore = (city) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('stores/mostview/'+city+'/0')\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.mostViewStoreSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){  \r\n    }\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAACC,EAAE,KAAK,MAAMC,QAAQ,IAAI;EACnD,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,kBAAkB,GAACJ,IAAI,GAAC,GAAG,GAACC,EAAE,CAAC;IAC9D,IAAGE,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACS,YAAY;QACxBC,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACd;AAER,CAAC;AACD,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM,MAAMX,QAAQ,IAAI;EAC/C,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,QAAQ,CAAC;IACxC,IAAGD,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACgB,eAAe;QAC3BN,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACd;AAER,CAAC;AACD,OAAO,MAAMK,gBAAgB,GAAIf,IAAI,IAAK,MAAME,QAAQ,IAAI;EACxD,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,kBAAkB,GAACJ,IAAI,GAAC,IAAI,CAAC;IAC5D,IAAGG,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACkB,oBAAoB;QAChCR,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC,CAClB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}