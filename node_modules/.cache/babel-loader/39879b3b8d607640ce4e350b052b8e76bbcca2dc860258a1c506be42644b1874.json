{"ast":null,"code":"import Api from '../../Config/Api';\nimport Type from './Types';\nexport const getCategory = (city, id) => async dispatch => {\n  try {\n    const response = await Api.get('Category/subcategory/' + id + '/' + city);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.CategorySuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.CategoryFailure,\n      payload: error.message\n    });\n  }\n};\nexport const getBrowseByMainCategory = (city, id) => async dispatch => {\n  try {\n    const response = await Api.get('maincategory/browseby/' + id + '/' + city);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.browseByMainCategorySuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.browseByMainCategoryFailure,\n      payload: error.message\n    });\n  }\n};\nexport const getBrowseBySubCategory = (city, id) => async dispatch => {\n  try {\n    const response = await Api.get('subcategory/browseby/' + id + '/' + city);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.browseBySubCategorySuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.browseByMainCategoryFailure,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["Api","Type","getCategory","city","id","dispatch","response","get","message","type","CategorySuccess","payload","data","error","CategoryFailure","getBrowseByMainCategory","browseByMainCategorySuccess","browseByMainCategoryFailure","getBrowseBySubCategory","browseBySubCategorySuccess"],"sources":["D:/react/website/finalcode/src/Redux/Action/CategoryAction.js"],"sourcesContent":["import Api from '../../Config/Api';\r\nimport Type from './Types';\r\n\r\nexport const getCategory = (city,id) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('Category/subcategory/'+id +'/'+city)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.CategorySuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n            dispatch({\r\n                type : Type.CategoryFailure,\r\n                payload : error.message\r\n            })\r\n            \r\n         \r\n        }\r\n} \r\nexport const getBrowseByMainCategory = (city,id) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('maincategory/browseby/'+id +'/'+city)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.browseByMainCategorySuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n            dispatch({\r\n                type : Type.browseByMainCategoryFailure,\r\n                payload : error.message\r\n            })\r\n            \r\n         \r\n        }\r\n} \r\nexport const getBrowseBySubCategory = (city,id) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('subcategory/browseby/'+id +'/'+city)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.browseBySubCategorySuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n            dispatch({\r\n                type : Type.browseByMainCategoryFailure,\r\n                payload : error.message\r\n            })\r\n            \r\n         \r\n        }\r\n} "],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAACC,EAAE,KAAK,MAAMC,QAAQ,IAAI;EACtD,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,uBAAuB,GAACH,EAAE,GAAE,GAAG,GAACD,IAAI,CAAC;IACpE,IAAGG,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACS,eAAe;QAC3BC,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLI,IAAI,EAAGR,IAAI,CAACa,eAAe;MAC3BH,OAAO,EAAGE,KAAK,CAACL;IACpB,CAAC,CAAC;EAGN;AACR,CAAC;AACD,OAAO,MAAMO,uBAAuB,GAAGA,CAACZ,IAAI,EAACC,EAAE,KAAK,MAAMC,QAAQ,IAAI;EAClE,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,wBAAwB,GAACH,EAAE,GAAE,GAAG,GAACD,IAAI,CAAC;IACrE,IAAGG,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACe,2BAA2B;QACvCL,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLI,IAAI,EAAGR,IAAI,CAACgB,2BAA2B;MACvCN,OAAO,EAAGE,KAAK,CAACL;IACpB,CAAC,CAAC;EAGN;AACR,CAAC;AACD,OAAO,MAAMU,sBAAsB,GAAGA,CAACf,IAAI,EAACC,EAAE,KAAK,MAAMC,QAAQ,IAAI;EACjE,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,uBAAuB,GAACH,EAAE,GAAE,GAAG,GAACD,IAAI,CAAC;IACpE,IAAGG,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACkB,0BAA0B;QACtCR,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLI,IAAI,EAAGR,IAAI,CAACgB,2BAA2B;MACvCN,OAAO,EAAGE,KAAK,CAACL;IACpB,CAAC,CAAC;EAGN;AACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}