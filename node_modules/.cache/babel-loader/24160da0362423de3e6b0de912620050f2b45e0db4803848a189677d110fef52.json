{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst baseurl = \"http://15.206.201.95/reactapi/public/v1/\";\nexport const mobilelogin = createAsyncThunk('user/mobilelogin', async _ref => {\n  let {\n    number\n  } = _ref;\n  try {\n    const body = {\n      \"email\": \"\",\n      \"password\": \"\",\n      \"number\": number\n    };\n    const response = await fetch(`${baseurl}auth`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    // Handle error\n    throw error;\n  }\n});\nconst loginSlice = createSlice({\n  name: 'user',\n  initialState: {\n    UserId: \"\",\n    UserName: \"\"\n    // Add error property to the initial state\n  },\n\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(mobilelogin.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(mobilelogin.fulfilled, (state, action) => {\n      console.log(action.payload);\n      localStorage.setItem('UserId', action.payload.data.UserId);\n      localStorage.setItem('UserName', action.payload.data.UserName);\n      state.UserId = action.payload.data.UserId;\n      state.UserName = action.payload.data.UserName;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(mobilelogin.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message; // Handle the error message\n    });\n  }\n});\n\nexport default loginSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","baseurl","mobilelogin","_ref","number","body","response","fetch","method","headers","JSON","stringify","json","error","loginSlice","name","initialState","UserId","UserName","reducers","extraReducers","builder","addCase","pending","state","isLoading","fulfilled","action","console","log","payload","localStorage","setItem","data","rejected","message","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/LoginSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nconst baseurl=\"http://15.206.201.95/reactapi/public/v1/\";\r\nexport const mobilelogin = createAsyncThunk('user/mobilelogin', async ({number}) => {\r\n    try {\r\n  \r\n        const body = {\"email\":\"\",\"password\":\"\",\"number\":number }\r\n\r\n        const response = await fetch(`${baseurl}auth`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n      \r\n      const json = await response.json();\r\n   \r\n      return json;\r\n    } catch (error) {\r\n      // Handle error\r\n      throw error;\r\n    }\r\n  });\r\n  const loginSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        UserId: \"\",\r\n        UserName:\"\",\r\n          // Add error property to the initial state\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n      builder\r\n        .addCase(mobilelogin.pending, (state) => {\r\n         \r\n          state.isLoading = true;\r\n          state.error = null;\r\n        })\r\n        .addCase(mobilelogin.fulfilled, (state, action) => {\r\n     console.log(action.payload);\r\n     localStorage.setItem('UserId', action.payload.data.UserId);\r\n     localStorage.setItem('UserName', action.payload.data.UserName);\r\n          state.UserId = action.payload.data.UserId;\r\n          state.UserName=action.payload.data.UserName\r\n          state.isLoading = false;\r\n          state.error = null;\r\n        })\r\n        .addCase(mobilelogin.rejected, (state, action) => {\r\n          state.isLoading = false;\r\n          state.error = action.error.message; // Handle the error message\r\n        });\r\n     \r\n    },\r\n  });\r\n  \r\n  export default loginSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,MAAMC,OAAO,GAAC,0CAA0C;AACxD,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,MAAAI,IAAA,IAAoB;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,IAAA;EAC3E,IAAI;IAEA,MAAME,IAAI,GAAG;MAAC,OAAO,EAAC,EAAE;MAAC,UAAU,EAAC,EAAE;MAAC,QAAQ,EAACD;IAAO,CAAC;IAExD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,OAAQ,MAAK,EAAE;MAC7CO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC;IAEJ,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAElC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;AACF,MAAMC,UAAU,GAAGd,WAAW,CAAC;EAC7Be,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAC;IACP;EACN,CAAC;;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAAGC,KAAK,IAAK;MAEvCA,KAAK,CAACC,SAAS,GAAG,IAAI;MACtBD,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACpB,WAAW,CAACwB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MACtDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,MAAM,CAACG,OAAO,CAACG,IAAI,CAAChB,MAAM,CAAC;MAC1Dc,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,MAAM,CAACG,OAAO,CAACG,IAAI,CAACf,QAAQ,CAAC;MACzDM,KAAK,CAACP,MAAM,GAAGU,MAAM,CAACG,OAAO,CAACG,IAAI,CAAChB,MAAM;MACzCO,KAAK,CAACN,QAAQ,GAACS,MAAM,CAACG,OAAO,CAACG,IAAI,CAACf,QAAQ;MAC3CM,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACpB,WAAW,CAACgC,QAAQ,EAAE,CAACV,KAAK,EAAEG,MAAM,KAAK;MAChDH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACX,KAAK,GAAGc,MAAM,CAACd,KAAK,CAACsB,OAAO,CAAC,CAAC;IACtC,CAAC,CAAC;EAEN;AACF,CAAC,CAAC;;AAEF,eAAerB,UAAU,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}