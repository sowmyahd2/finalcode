{"ast":null,"code":"import Api from '../../Config/Api';\nimport Type from './Types';\nexport const getNewArrivals = (city, id) => async dispatch => {\n  try {\n    const response = await Api.get('newarrival/' + city + '/' + id);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.newArrivalsSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.newArrivalsFailure,\n      payload: error.message\n    });\n  }\n};\nexport const getNewArrivalsProducts = (city, DepartmentId, BrandId) => async dispatch => {\n  try {\n    const response = await Api.get('brands/newarrivals/products/' + city + \"/\" + DepartmentId + \"/\" + BrandId);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.newArrivalsProductsSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.newArrivalsProductsFailure,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["Api","Type","getNewArrivals","city","id","dispatch","response","get","message","type","newArrivalsSuccess","payload","data","error","newArrivalsFailure","getNewArrivalsProducts","DepartmentId","BrandId","newArrivalsProductsSuccess","newArrivalsProductsFailure"],"sources":["D:/react/website/finalcode/src/Redux/Action/NewArrivalsAction.js"],"sourcesContent":["import Api from '../../Config/Api';\r\nimport Type from './Types';\r\n\r\nexport const getNewArrivals = (city,id) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('newarrival/'+city +'/'+id)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.newArrivalsSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n            dispatch({\r\n                type : Type.newArrivalsFailure,\r\n                payload : error.message\r\n            })\r\n         \r\n        }\r\n} \r\nexport const getNewArrivalsProducts = (city,DepartmentId,BrandId) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('brands/newarrivals/products/'+city+\"/\"+DepartmentId+\"/\"+BrandId)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.newArrivalsProductsSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){  \r\n            dispatch({\r\n                type : Type.newArrivalsProductsFailure,\r\n                payload : error.message\r\n            })\r\n    }\r\n} \r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAACC,EAAE,KAAK,MAAMC,QAAQ,IAAI;EACzD,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,aAAa,GAACJ,IAAI,GAAE,GAAG,GAACC,EAAE,CAAC;IAC1D,IAAGE,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACS,kBAAkB;QAC9BC,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLI,IAAI,EAAGR,IAAI,CAACa,kBAAkB;MAC9BH,OAAO,EAAGE,KAAK,CAACL;IACpB,CAAC,CAAC;EAEN;AACR,CAAC;AACD,OAAO,MAAMO,sBAAsB,GAAGA,CAACZ,IAAI,EAACa,YAAY,EAACC,OAAO,KAAK,MAAMZ,QAAQ,IAAI;EACnF,IACA;IACI,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,8BAA8B,GAACJ,IAAI,GAAC,GAAG,GAACa,YAAY,GAAC,GAAG,GAACC,OAAO,CAAC;IAChG,IAAGX,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BH,QAAQ,CAAC;QACDI,IAAI,EAAGR,IAAI,CAACiB,0BAA0B;QACtCP,OAAO,EAAGL,QAAQ,CAACM;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLI,IAAI,EAAGR,IAAI,CAACkB,0BAA0B;MACtCR,OAAO,EAAGE,KAAK,CAACL;IACpB,CAAC,CAAC;EACV;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}