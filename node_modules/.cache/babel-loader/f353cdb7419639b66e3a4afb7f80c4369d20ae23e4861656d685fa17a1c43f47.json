{"ast":null,"code":"import Api from '../../Config/Api';\nimport Type from './Types';\nexport const userprofile = userid => async dispatch => {\n  try {\n    const response = await Api.get('user/profile/' + userid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.Userprofile,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const Useraddress = userid => async dispatch => {\n  try {\n    const response = await Api.get('user/address/' + userid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.Useraddress,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const getpickorderdetail = (city, userid) => async dispatch => {\n  try {\n    const response = await Api.get('pickupordertail/' + city + \"/\" + userid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.pickupordertailsSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const Inactiveaddress = id => async dispatch => {\n  try {\n    const response = await Api.get('inactiveaddress/' + id);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.InactiveUseraddress,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const Userlocality = userid => async dispatch => {\n  try {\n    const response = await Api.get('user/location/' + userid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.Userlocality,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const addbillingaddress = (userid, mobile, name, landmark, pincode, adress) => async dispatch => {\n  try {\n    const response = await Api.get('user/addadress/' + userid + '/' + mobile + '/' + name + '/' + landmark + '/' + pincode + '/' + adress);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.addaddress,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const getpsorders = (userid, cityname) => async dispatch => {\n  try {\n    const response = await Api.get('pickupinshoporders/' + userid + '/' + cityname);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.psorderSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const gethomedeliverysorders = (userid, cityname) => async dispatch => {\n  try {\n    const response = await Api.get('homedeliveryorders/' + cityname + '/' + userid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.homedeliveryorderSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const gethomedeliverysorderdetail = (city, orderid) => async dispatch => {\n  try {\n    const response = await Api.get('homedeliveryorderdetail/' + city + '/' + orderid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.homedeliveryorderdetailSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const cancelproduct = (city, orderid, reasonid, comment) => async dispatch => {\n  try {\n    const response = await Api.get('cancelpickorder/' + city + '/' + orderid + \"/\" + reasonid + \"/\" + comment);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.cancelorderSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const getwishlist = (userid, city) => async dispatch => {\n  try {\n    const response = await Api.get('wishlist/' + userid + \"/\" + city);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.wishlistSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};\nexport const removewishproduct = (userid, city, pid) => async dispatch => {\n  try {\n    const response = await Api.get('removewishlist/' + userid + \"/\" + city + \"/\" + pid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.removewishlistSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};","map":{"version":3,"names":["Api","Type","userprofile","userid","dispatch","response","get","message","type","Userprofile","payload","data","error","Useraddress","getpickorderdetail","city","pickupordertailsSuccess","Inactiveaddress","id","InactiveUseraddress","Userlocality","addbillingaddress","mobile","name","landmark","pincode","adress","addaddress","getpsorders","cityname","psorderSuccess","gethomedeliverysorders","homedeliveryorderSuccess","gethomedeliverysorderdetail","orderid","homedeliveryorderdetailSuccess","cancelproduct","reasonid","comment","cancelorderSuccess","getwishlist","wishlistSuccess","removewishproduct","pid","removewishlistSuccess"],"sources":["D:/react/website/finalcode/src/Redux/Action/UserprofileAction.js"],"sourcesContent":["import Api from '../../Config/Api';\r\nimport Type from './Types';\r\n\r\n\r\nexport const userprofile = (userid) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('user/profile/'+userid)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.Userprofile,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\n\r\nexport const Useraddress = (userid) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('user/address/'+userid)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.Useraddress,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\nexport const getpickorderdetail= (city,userid) => async dispatch => {\r\n    try\r\n    \r\n    {\r\n        const response = await Api.get('pickupordertail/'+city+\"/\"+userid)\r\n        \r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.pickupordertailsSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\nexport const Inactiveaddress = (id) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('inactiveaddress/'+id)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.InactiveUseraddress,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\n\r\nexport const Userlocality = (userid) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('user/location/'+userid)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.Userlocality,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\nexport const addbillingaddress = (userid,mobile,name,landmark,pincode,adress) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('user/addadress/'+userid+'/'+mobile+'/'+name+'/'+landmark+'/'+pincode+'/'+adress)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.addaddress,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n         \r\n        }\r\n}\r\nexport const getpsorders = (userid,cityname) => async dispatch => {\r\n    try\r\n    {\r\n        const response =  await Api.get('pickupinshoporders/'+userid+'/'+cityname);\r\n      \r\n        if(response.message === \"success\"){\r\n           \r\n        dispatch({\r\n                type : Type.psorderSuccess,\r\n                payload : response.data\r\n            })\r\n        }\r\n    } catch(error){\r\n    \r\n    }\r\n\r\n} \r\nexport const gethomedeliverysorders = (userid,cityname) => async dispatch => {\r\n    try\r\n    {\r\n        const response =  await Api.get('homedeliveryorders/'+cityname+'/'+userid);\r\n      \r\n        if(response.message === \"success\"){\r\n           \r\n        dispatch({\r\n                type : Type.homedeliveryorderSuccess,\r\n                payload : response.data\r\n            })\r\n        }\r\n    } catch(error){\r\n    \r\n    }\r\n\r\n}\r\nexport const gethomedeliverysorderdetail = (city,orderid) => async dispatch => {\r\n    try\r\n    {\r\n        const response =  await Api.get('homedeliveryorderdetail/'+city+'/'+orderid);\r\n      \r\n        if(response.message === \"success\"){\r\n           \r\n        dispatch({\r\n                type : Type.homedeliveryorderdetailSuccess,\r\n                payload : response.data\r\n            })\r\n        }\r\n    } catch(error){\r\n    \r\n    }\r\n\r\n}\r\nexport const cancelproduct=(city,orderid,reasonid,comment)=>async dispatch=>{\r\n    try\r\n    {\r\n        const response =  await Api.get('cancelpickorder/'+city+'/'+orderid+\"/\"+reasonid+\"/\"+comment);\r\n      \r\n        if(response.message === \"success\"){\r\n           \r\n        dispatch({\r\n                type : Type.cancelorderSuccess,\r\n                payload : response.data\r\n            })\r\n        }\r\n    } catch(error){\r\n    \r\n    }\r\n}\r\nexport const getwishlist = (userid,city) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('wishlist/'+userid+\"/\"+city)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.wishlistSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){  \r\n            \r\n    }\r\n}\r\nexport const removewishproduct = (userid,city,pid) => async dispatch => {\r\n    try\r\n    {\r\n        const response = await Api.get('removewishlist/'+userid+\"/\"+city+\"/\"+pid)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.removewishlistSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){  \r\n            \r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}