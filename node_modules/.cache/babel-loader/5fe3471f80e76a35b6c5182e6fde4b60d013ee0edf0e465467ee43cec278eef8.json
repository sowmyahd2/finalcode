{"ast":null,"code":"import { store } from \"../Redux/Store\";\nimport { pathOr } from \"ramda\";\nclass Api {\n  static headers() {\n    const state = store.getState();\n    const accessToken = pathOr(\"\", [\"user\", \"AccessToken\"], state.Login);\n    return {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + accessToken\n    };\n  }\n  static get(route) {\n    return this.xhr(route, null, 'GET');\n  }\n  static post(route, params) {\n    return this.xhr(route, params, 'POST');\n  }\n  static xhr(route, params, verb) {\n    const host = \"http://13.235.76.80/reactapi/public/v1/\";\n    const url = `${host}${route}`;\n    const options = Object.assign({\n      method: verb\n    }, params ? {\n      body: JSON.stringify(params)\n    } : null);\n    options.headers = Api.headers();\n    return fetch(url, options).then(resp => {\n      console.log(\"ResponseUrl\", url);\n      const json = resp.json();\n      if (resp.ok) {\n        console.log(url, json);\n        return json;\n      }\n      return json.then(err => {\n        throw err;\n      });\n    });\n  }\n}\nexport default Api;","map":{"version":3,"names":["store","pathOr","Api","headers","state","getState","accessToken","Login","get","route","xhr","post","params","verb","host","url","options","Object","assign","method","body","JSON","stringify","fetch","then","resp","console","log","json","ok","err"],"sources":["D:/react/website/finalcode/src/Config/Api.js"],"sourcesContent":["    import { store } from \"../Redux/Store\";\r\nimport { pathOr } from \"ramda\";\r\n\r\n  \r\nclass Api {\r\n    static headers() {\r\n        const state = store.getState();\r\n        const accessToken = pathOr(\"\",[\"user\",\"AccessToken\"],state.Login);\r\n        return {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": \"Bearer \"+accessToken\r\n        };\r\n    }\r\n\r\n    static get(route) {\r\n        return this.xhr(route, null, 'GET');\r\n    }\r\n    static post(route, params) {\r\n        return this.xhr(route, params, 'POST');\r\n    }\r\n    static xhr(route, params, verb) {\r\n        \r\n       const host = \"http://13.235.76.80/reactapi/public/v1/\" \r\n        const url = `${host}${route}`;\r\n        const options = Object.assign({ method: verb }, params ? { body: JSON.stringify(params) } : null);\r\n        options.headers = Api.headers();\r\n        return fetch(url, options).then((resp) => {\r\n            console.log(\"ResponseUrl\",url)\r\n            \r\n            const json = resp.json();\r\n            \r\n            if (resp.ok) {\r\n                console.log(url, json);\r\n                return json;\r\n            }\r\n            return json.then((err) => { throw err; });\r\n        });\r\n    }\r\n}\r\nexport default Api;"],"mappings":"AAAI,SAASA,KAAK,QAAQ,gBAAgB;AAC1C,SAASC,MAAM,QAAQ,OAAO;AAG9B,MAAMC,GAAG,CAAC;EACN,OAAOC,OAAOA,CAAA,EAAG;IACb,MAAMC,KAAK,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC;IAC9B,MAAMC,WAAW,GAAGL,MAAM,CAAC,EAAE,EAAC,CAAC,MAAM,EAAC,aAAa,CAAC,EAACG,KAAK,CAACG,KAAK,CAAC;IACjE,OAAO;MACH,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,SAAS,GAACD;IAC/B,CAAC;EACL;EAEA,OAAOE,GAAGA,CAACC,KAAK,EAAE;IACd,OAAO,IAAI,CAACC,GAAG,CAACD,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;EACvC;EACA,OAAOE,IAAIA,CAACF,KAAK,EAAEG,MAAM,EAAE;IACvB,OAAO,IAAI,CAACF,GAAG,CAACD,KAAK,EAAEG,MAAM,EAAE,MAAM,CAAC;EAC1C;EACA,OAAOF,GAAGA,CAACD,KAAK,EAAEG,MAAM,EAAEC,IAAI,EAAE;IAE7B,MAAMC,IAAI,GAAG,yCAAyC;IACrD,MAAMC,GAAG,GAAI,GAAED,IAAK,GAAEL,KAAM,EAAC;IAC7B,MAAMO,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC;MAAEC,MAAM,EAAEN;IAAK,CAAC,EAAED,MAAM,GAAG;MAAEQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,MAAM;IAAE,CAAC,GAAG,IAAI,CAAC;IACjGI,OAAO,CAACb,OAAO,GAAGD,GAAG,CAACC,OAAO,CAAC,CAAC;IAC/B,OAAOoB,KAAK,CAACR,GAAG,EAAEC,OAAO,CAAC,CAACQ,IAAI,CAAEC,IAAI,IAAK;MACtCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAACZ,GAAG,CAAC;MAE9B,MAAMa,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAC,CAAC;MAExB,IAAIH,IAAI,CAACI,EAAE,EAAE;QACTH,OAAO,CAACC,GAAG,CAACZ,GAAG,EAAEa,IAAI,CAAC;QACtB,OAAOA,IAAI;MACf;MACA,OAAOA,IAAI,CAACJ,IAAI,CAAEM,GAAG,IAAK;QAAE,MAAMA,GAAG;MAAE,CAAC,CAAC;IAC7C,CAAC,CAAC;EACN;AACJ;AACA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}