{"ast":null,"code":"import Api from '../../Config/Api';\nimport Type from './Types';\nexport const getAddtoCart = (city, type, dealerPriceId, qty) => async dispatch => {\n  try {\n    const body = {\n      city,\n      type,\n      dealerPriceId,\n      qty\n    };\n    const response = await Api.post('cart', body);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.addtocartSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.addtocartFailure,\n      payload: error.message\n    });\n  }\n};\nexport const getViewCart = (type, city) => async dispatch => {\n  try {\n    const response = await Api.get('cart/' + type + '/' + city);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.addtocartSuccess,\n        payload: response.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: Type.addtocartFailure,\n      payload: error.message\n    });\n  }\n};\nexport const removeproduct = (userid, type, city, productid) => async dispatch => {\n  try {\n    const response = await Api.get('cart/removeproduct/' + userid + '/' + type + '/' + city + '/' + productid);\n    if (response.message === \"success\") {\n      dispatch({\n        type: Type.removeproduct,\n        payload: response.data\n      });\n    }\n  } catch (error) {}\n};","map":{"version":3,"names":["Api","Type","getAddtoCart","city","type","dealerPriceId","qty","dispatch","body","response","post","message","addtocartSuccess","payload","data","error","addtocartFailure","getViewCart","get","removeproduct","userid","productid"],"sources":["D:/react/website/finalcode/src/Redux/Action/CartAction.js"],"sourcesContent":["import Api from '../../Config/Api';\r\nimport Type from './Types';\r\n\r\nexport const getAddtoCart = (city,type,dealerPriceId,qty,) => async dispatch => {\r\n    try\r\n    {\r\n        const body = {\r\n            city,\r\n            type,\r\n            dealerPriceId,\r\n            qty,\r\n        }\r\n        const response = await Api.post('cart',body)\r\n        if(response.message === \"success\"){\r\n            dispatch({\r\n                    type : Type.addtocartSuccess,\r\n                    payload : response.data\r\n                })\r\n            }\r\n        } catch(error){\r\n            dispatch({\r\n                type : Type.addtocartFailure,\r\n                payload : error.message\r\n            })          \r\n         \r\n        }\r\n    } \r\n    export const getViewCart = (type,city) => async dispatch => {\r\n        try\r\n        {\r\n            const response = await Api.get('cart/'+type+'/'+city)\r\n            if(response.message === \"success\"){\r\n                dispatch({\r\n                        type : Type.addtocartSuccess,\r\n                        payload : response.data\r\n                    })\r\n                }\r\n            } catch(error){\r\n                dispatch({\r\n                    type : Type.addtocartFailure,\r\n                    payload : error.message\r\n                })          \r\n             \r\n            }\r\n        } \r\n    export const removeproduct=(userid,type,city,productid)=>async dispatch=>{\r\n\r\n        try{\r\n            const response = await Api.get('cart/removeproduct/'+userid+'/'+type+'/'+city+'/'+productid)\r\n            if(response.message === \"success\"){\r\n                dispatch({\r\n                        type : Type.removeproduct,\r\n                        payload : response.data\r\n                    })\r\n                }\r\n\r\n        }catch(error){\r\n\r\n        }\r\n    }"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,SAAS;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAACC,IAAI,EAACC,aAAa,EAACC,GAAG,KAAM,MAAMC,QAAQ,IAAI;EAC5E,IACA;IACI,MAAMC,IAAI,GAAG;MACTL,IAAI;MACJC,IAAI;MACJC,aAAa;MACbC;IACJ,CAAC;IACD,MAAMG,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,MAAM,EAACF,IAAI,CAAC;IAC5C,IAAGC,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BJ,QAAQ,CAAC;QACDH,IAAI,EAAGH,IAAI,CAACW,gBAAgB;QAC5BC,OAAO,EAAGJ,QAAQ,CAACK;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLH,IAAI,EAAGH,IAAI,CAACe,gBAAgB;MAC5BH,OAAO,EAAGE,KAAK,CAACJ;IACpB,CAAC,CAAC;EAEN;AACJ,CAAC;AACD,OAAO,MAAMM,WAAW,GAAGA,CAACb,IAAI,EAACD,IAAI,KAAK,MAAMI,QAAQ,IAAI;EACxD,IACA;IACI,MAAME,QAAQ,GAAG,MAAMT,GAAG,CAACkB,GAAG,CAAC,OAAO,GAACd,IAAI,GAAC,GAAG,GAACD,IAAI,CAAC;IACrD,IAAGM,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BJ,QAAQ,CAAC;QACDH,IAAI,EAAGH,IAAI,CAACW,gBAAgB;QAC5BC,OAAO,EAAGJ,QAAQ,CAACK;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLH,IAAI,EAAGH,IAAI,CAACe,gBAAgB;MAC5BH,OAAO,EAAGE,KAAK,CAACJ;IACpB,CAAC,CAAC;EAEN;AACJ,CAAC;AACL,OAAO,MAAMQ,aAAa,GAACA,CAACC,MAAM,EAAChB,IAAI,EAACD,IAAI,EAACkB,SAAS,KAAG,MAAMd,QAAQ,IAAE;EAErE,IAAG;IACC,MAAME,QAAQ,GAAG,MAAMT,GAAG,CAACkB,GAAG,CAAC,qBAAqB,GAACE,MAAM,GAAC,GAAG,GAAChB,IAAI,GAAC,GAAG,GAACD,IAAI,GAAC,GAAG,GAACkB,SAAS,CAAC;IAC5F,IAAGZ,QAAQ,CAACE,OAAO,KAAK,SAAS,EAAC;MAC9BJ,QAAQ,CAAC;QACDH,IAAI,EAAGH,IAAI,CAACkB,aAAa;QACzBN,OAAO,EAAGJ,QAAQ,CAACK;MACvB,CAAC,CAAC;IACN;EAER,CAAC,QAAMC,KAAK,EAAC,CAEb;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}