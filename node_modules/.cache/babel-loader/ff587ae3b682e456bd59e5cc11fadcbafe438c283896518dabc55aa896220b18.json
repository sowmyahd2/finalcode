{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst BASE_URL = 'http://13.201.130.241/reactapi/public/v1/';\nexport const getbrandoffer = createAsyncThunk('brand/offers', async _ref => {\n  let {\n    selectedcity,\n    id\n  } = _ref;\n  try {\n    const city = selectedcity;\n    alert(selectedcity);\n    const response = await fetch(`${BASE_URL}brands/offers/` + city + '/' + id);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log(\"branddata\", response.data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nconst brandSlice = createSlice({\n  name: 'brand',\n  initialState: {\n    branddeals: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getbrandoffer.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(getbrandoffer.fulfilled, (state, action) => {\n      console.log(action.payload.data);\n      state.branddeals = action.payload.data;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(getbrandoffer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default brandSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","getbrandoffer","_ref","selectedcity","id","city","alert","response","fetch","ok","Error","data","json","console","log","error","brandSlice","name","initialState","branddeals","isLoading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/BrandSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst BASE_URL = 'http://13.201.130.241/reactapi/public/v1/';\r\n\r\nexport const getbrandoffer = createAsyncThunk(\r\n  'brand/offers',\r\n  async ({ selectedcity,id }) => {\r\n    try {\r\n      \r\n      const city=selectedcity;\r\n      alert(selectedcity);\r\n      const response = await fetch(`${BASE_URL}brands/offers/`+city+'/'+id);\r\n    \r\n   \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      console.log(\"branddata\",response.data)\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n    throw error;\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nconst brandSlice = createSlice({\r\n  name: 'brand',\r\n  initialState: {\r\n     branddeals: [],\r\n     \r\n       isLoading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getbrandoffer.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getbrandoffer.fulfilled, (state, action) => {\r\n     console.log(action.payload.data);\r\n        state.branddeals = action.payload.data;\r\n        state.isLoading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(getbrandoffer.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n      \r\n  },\r\n});\r\n\r\nexport default brandSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,QAAQ,GAAG,2CAA2C;AAE5D,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,cAAc,EACd,MAAAI,IAAA,IAA+B;EAAA,IAAxB;IAAEC,YAAY;IAACC;EAAG,CAAC,GAAAF,IAAA;EACxB,IAAI;IAEF,MAAMG,IAAI,GAACF,YAAY;IACvBG,KAAK,CAACH,YAAY,CAAC;IACnB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,QAAS,gBAAe,GAACK,IAAI,GAAC,GAAG,GAACD,EAAE,CAAC;IAGrE,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACP,QAAQ,CAACI,IAAI,CAAC;IACtC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACX;AACF,CACF,CAAC;AAID,MAAMC,UAAU,GAAGjB,WAAW,CAAC;EAC7BkB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACXC,UAAU,EAAE,EAAE;IAEZC,SAAS,EAAE,KAAK;IAAEL,KAAK,EAAE;EAAK,CAAC;EACpCM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,aAAa,CAACwB,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACvB,aAAa,CAAC0B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDf,OAAO,CAACC,GAAG,CAACc,MAAM,CAACC,OAAO,CAAClB,IAAI,CAAC;MAC7Be,KAAK,CAACP,UAAU,GAAGS,MAAM,CAACC,OAAO,CAAClB,IAAI;MACtCe,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACvB,aAAa,CAAC6B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EAEN;AACF,CAAC,CAAC;AAEF,eAAeb,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}