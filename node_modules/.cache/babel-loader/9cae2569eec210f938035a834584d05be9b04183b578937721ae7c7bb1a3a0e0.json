{"ast":null,"code":"\"use strict\";\n\n// @flow strict\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unlisten = exports.listen = void 0;\nconst elementsWithListeners = [];\nconst registeredListeners = [];\nfunction createListener(el) {\n  return {\n    el,\n    callbacks: {},\n    realCallbacks: {},\n    realListenersCnt: 0\n  };\n}\nfunction addCallback(listener, event, cb) {\n  if (listener.callbacks[event]) {\n    if (listener.callbacks[event].indexOf(cb) === -1) {\n      listener.callbacks[event].push(cb);\n    }\n    return;\n  }\n  listener.callbacks[event] = [cb];\n  listener.realCallbacks[event] = e => {\n    for (let i = 0, l = listener.callbacks[event].length; i < l; i += 1) {\n      listener.callbacks[event][i](e);\n    }\n  };\n  listener.el.addEventListener(event, listener.realCallbacks[event]);\n  listener.realListenersCnt += 1;\n}\nfunction removeCallback(listener, event, cb) {\n  if (!listener.callbacks[event]) {\n    return;\n  }\n  const idx = listener.callbacks[event].indexOf(cb);\n  if (idx === -1) {\n    return;\n  }\n  listener.callbacks[event].splice(idx, 1);\n  if (listener.callbacks[event].length > 0) {\n    return;\n  }\n  // no more listeners, lets clean up\n  listener.el.removeEventListener(event, listener.realCallbacks[event]);\n  delete listener.callbacks[event];\n  delete listener.realCallbacks[event];\n  listener.realListenersCnt -= 1;\n}\nfunction addListener(el, event, cb) {\n  let idx = elementsWithListeners.indexOf(el);\n  if (idx === -1) {\n    idx = elementsWithListeners.length;\n    elementsWithListeners.push(el);\n    registeredListeners.push(createListener(el));\n  }\n  const listener = registeredListeners[idx];\n  addCallback(listener, event, cb);\n}\nfunction removeListener(el, event, cb) {\n  const idx = elementsWithListeners.indexOf(el);\n  if (idx === -1) {\n    return;\n  }\n  const listener = registeredListeners[idx];\n  removeCallback(listener, event, cb);\n  if (listener.realListenersCnt > 0) {\n    return;\n  }\n  // no more listeners lets clean up\n  elementsWithListeners.splice(idx, 1);\n  registeredListeners.splice(idx, 1);\n}\n/**\n * Subscribe cb to events list\n * @param  {HTMLListenable}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be called\n */\nfunction listen(el, events, cb) {\n  for (let i = 0, l = events.length; i < l; i += 1) {\n    addListener(el, events[i], cb);\n  }\n}\nexports.listen = listen;\n/**\n * Unsubscribe cb from events list\n * @param  {HTMLListenable}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be unsubscribed\n */\nfunction unlisten(el, events, cb) {\n  for (let i = 0, l = events.length; i < l; i += 1) {\n    removeListener(el, events[i], cb);\n  }\n}\nexports.unlisten = unlisten;","map":{"version":3,"names":["Object","defineProperty","exports","value","unlisten","listen","elementsWithListeners","registeredListeners","createListener","el","callbacks","realCallbacks","realListenersCnt","addCallback","listener","event","cb","indexOf","push","e","i","l","length","addEventListener","removeCallback","idx","splice","removeEventListener","addListener","removeListener","events"],"sources":["D:/react/website/finalcode/node_modules/react-sticky-el/lib/helpers/events.js"],"sourcesContent":["\"use strict\";\n// @flow strict\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unlisten = exports.listen = void 0;\nconst elementsWithListeners = [];\nconst registeredListeners = [];\nfunction createListener(el) {\n    return ({\n        el,\n        callbacks: {},\n        realCallbacks: {},\n        realListenersCnt: 0\n    });\n}\nfunction addCallback(listener, event, cb) {\n    if (listener.callbacks[event]) {\n        if (listener.callbacks[event].indexOf(cb) === -1) {\n            listener.callbacks[event].push(cb);\n        }\n        return;\n    }\n    listener.callbacks[event] = [cb];\n    listener.realCallbacks[event] = (e) => {\n        for (let i = 0, l = listener.callbacks[event].length; i < l; i += 1) {\n            listener.callbacks[event][i](e);\n        }\n    };\n    listener.el.addEventListener(event, listener.realCallbacks[event]);\n    listener.realListenersCnt += 1;\n}\nfunction removeCallback(listener, event, cb) {\n    if (!listener.callbacks[event]) {\n        return;\n    }\n    const idx = listener.callbacks[event].indexOf(cb);\n    if (idx === -1) {\n        return;\n    }\n    listener.callbacks[event].splice(idx, 1);\n    if (listener.callbacks[event].length > 0) {\n        return;\n    }\n    // no more listeners, lets clean up\n    listener.el.removeEventListener(event, listener.realCallbacks[event]);\n    delete listener.callbacks[event];\n    delete listener.realCallbacks[event];\n    listener.realListenersCnt -= 1;\n}\nfunction addListener(el, event, cb) {\n    let idx = elementsWithListeners.indexOf(el);\n    if (idx === -1) {\n        idx = elementsWithListeners.length;\n        elementsWithListeners.push(el);\n        registeredListeners.push(createListener(el));\n    }\n    const listener = registeredListeners[idx];\n    addCallback(listener, event, cb);\n}\nfunction removeListener(el, event, cb) {\n    const idx = elementsWithListeners.indexOf(el);\n    if (idx === -1) {\n        return;\n    }\n    const listener = registeredListeners[idx];\n    removeCallback(listener, event, cb);\n    if (listener.realListenersCnt > 0) {\n        return;\n    }\n    // no more listeners lets clean up\n    elementsWithListeners.splice(idx, 1);\n    registeredListeners.splice(idx, 1);\n}\n/**\n * Subscribe cb to events list\n * @param  {HTMLListenable}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be called\n */\nfunction listen(el, events, cb) {\n    for (let i = 0, l = events.length; i < l; i += 1) {\n        addListener(el, events[i], cb);\n    }\n}\nexports.listen = listen;\n/**\n * Unsubscribe cb from events list\n * @param  {HTMLListenable}   el       target element\n * @param  {Array}         events   array of event names\n * @param  {Function} cb   callback that should be unsubscribed\n */\nfunction unlisten(el, events, cb) {\n    for (let i = 0, l = events.length; i < l; i += 1) {\n        removeListener(el, events[i], cb);\n    }\n}\nexports.unlisten = unlisten;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}