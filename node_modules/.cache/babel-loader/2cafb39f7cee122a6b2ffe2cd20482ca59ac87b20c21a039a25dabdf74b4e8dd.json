{"ast":null,"code":"import Api from \"../../Config/Api\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const fetchmostviewedproducts = createAsyncThunk('Products/mostView/', async (_ref, _ref2) => {\n  let {\n    selectedCity\n  } = _ref;\n  let {\n    dispatch\n  } = _ref2;\n  try {\n    const response1 = await fetch(`${Api}Products/mostView/${selectedCity}`);\n    const json1 = await response1.json();\n    return json1;\n  } catch (error) {\n    // Handle error\n    throw error;\n  }\n});\n\n// Create the API using createApi\nexport const mostviewed = createApi({\n  reducerPath: 'mostviewed',\n  baseQuery: fetchBaseQuery({\n    baseUrl: Api\n  }),\n  endpoints: builder => ({\n    getDepartment: builder.query({\n      query: selectedCity => `Products/mostView/${selectedCity}`\n    })\n  })\n});\nconst mostviewedSlice = createSlice({\n  name: 'mostviewed',\n  initialState: {\n    data: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    setMostViewedProducts: (state, action) => {\n      state.data = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchmostviewedproducts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(fetchmostviewedproducts.fulfilled, (state, action) => {\n      state.pcartitems = [];\n      state.data = action.payload.data;\n      state.isLoading = false;\n      state.error = null;\n    });\n    builder.addCase(fetchmostviewedproducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  setMostViewedProducts\n} = mostviewedSlice.actions;\nexport default mostviewedSlice.reducer;","map":{"version":3,"names":["Api","createAsyncThunk","createSlice","createApi","fetchBaseQuery","fetchmostviewedproducts","_ref","_ref2","selectedCity","dispatch","response1","fetch","json1","json","error","mostviewed","reducerPath","baseQuery","baseUrl","endpoints","builder","getDepartment","query","mostviewedSlice","name","initialState","data","isLoading","reducers","setMostViewedProducts","state","action","payload","extraReducers","addCase","pending","fulfilled","pcartitems","rejected","message","actions","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/MostviewSlice.js"],"sourcesContent":["import Api from \"../../Config/Api\";\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nexport const fetchmostviewedproducts = createAsyncThunk('Products/mostView/', async ({ selectedCity }, { dispatch }) => {\r\n    try {\r\n      const response1 = await fetch(`${Api}Products/mostView/${selectedCity}`);\r\n      const json1 = await response1.json();\r\n      \r\n      return json1;\r\n    } catch (error) {\r\n      // Handle error\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  // Create the API using createApi\r\n  export const mostviewed = createApi({\r\n    reducerPath: 'mostviewed',\r\n    baseQuery: fetchBaseQuery({ baseUrl: Api }),\r\n    endpoints: (builder) => ({\r\n      getDepartment: builder.query({\r\n        query: (selectedCity) => `Products/mostView/${selectedCity}`,\r\n      }),\r\n    }),\r\n  });\r\n  const mostviewedSlice = createSlice({\r\n      name: 'mostviewed',\r\n      initialState: { data: [], isLoading: false, error: null },\r\n      reducers: {\r\n        setMostViewedProducts: (state, action) => {\r\n          state.data = action.payload;\r\n      state.isLoading = false;\r\n      state.error = null;\r\n        },\r\n      },\r\n      extraReducers: (builder) => {\r\n        builder.addCase(fetchmostviewedproducts.pending, (state) => {\r\n          state.isLoading = true;\r\n          state.error = null;\r\n        });\r\n        builder.addCase(fetchmostviewedproducts.fulfilled, (state, action) => {\r\n        state.pcartitems = [];\r\n          state.data = action.payload.data;\r\n          state.isLoading = false;\r\n          state.error = null;\r\n        });\r\n        builder.addCase(fetchmostviewedproducts.rejected, (state, action) => {\r\n          state.isLoading = false;\r\n          state.error = action.error.message;\r\n        });\r\n      },\r\n    \r\n    });\r\n    \r\n    export const { setMostViewedProducts } = mostviewedSlice.actions;\r\n    export default mostviewedSlice.reducer;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACxE,OAAO,MAAMC,uBAAuB,GAAGJ,gBAAgB,CAAC,oBAAoB,EAAE,OAAAK,IAAA,EAAAC,KAAA,KAA0C;EAAA,IAAnC;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAAA,IAAE;IAAEG;EAAS,CAAC,GAAAF,KAAA;EAC/G,IAAI;IACF,MAAMG,SAAS,GAAG,MAAMC,KAAK,CAAE,GAAEX,GAAI,qBAAoBQ,YAAa,EAAC,CAAC;IACxE,MAAMI,KAAK,GAAG,MAAMF,SAAS,CAACG,IAAI,CAAC,CAAC;IAEpC,OAAOD,KAAK;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd;IACA,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAGZ,SAAS,CAAC;EAClCa,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEb,cAAc,CAAC;IAAEc,OAAO,EAAElB;EAAI,CAAC,CAAC;EAC3CmB,SAAS,EAAGC,OAAO,KAAM;IACvBC,aAAa,EAAED,OAAO,CAACE,KAAK,CAAC;MAC3BA,KAAK,EAAGd,YAAY,IAAM,qBAAoBA,YAAa;IAC7D,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AACF,MAAMe,eAAe,GAAGrB,WAAW,CAAC;EAChCsB,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAE,KAAK;IAAEb,KAAK,EAAE;EAAK,CAAC;EACzDc,QAAQ,EAAE;IACRC,qBAAqB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAAChB,KAAK,GAAG,IAAI;IAChB;EACF,CAAC;EACDmB,aAAa,EAAGb,OAAO,IAAK;IAC1BA,OAAO,CAACc,OAAO,CAAC7B,uBAAuB,CAAC8B,OAAO,EAAGL,KAAK,IAAK;MAC1DA,KAAK,CAACH,SAAS,GAAG,IAAI;MACtBG,KAAK,CAAChB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IACFM,OAAO,CAACc,OAAO,CAAC7B,uBAAuB,CAAC+B,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACtED,KAAK,CAACO,UAAU,GAAG,EAAE;MACnBP,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACN,IAAI;MAChCI,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAAChB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IACFM,OAAO,CAACc,OAAO,CAAC7B,uBAAuB,CAACiC,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACnED,KAAK,CAACH,SAAS,GAAG,KAAK;MACvBG,KAAK,CAAChB,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACyB,OAAO;IACpC,CAAC,CAAC;EACJ;AAEF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAsB,CAAC,GAAGN,eAAe,CAACiB,OAAO;AAChE,eAAejB,eAAe,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}