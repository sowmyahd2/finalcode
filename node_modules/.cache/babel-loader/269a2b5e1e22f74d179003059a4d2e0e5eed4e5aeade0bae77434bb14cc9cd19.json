{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport BASE_URL from '../../Config/apii';\nexport const fetchMostViewedProducts = createAsyncThunk('products/fetchMostViewedproducts', async _ref => {\n  let {\n    dealerid,\n    selectedCity\n  } = _ref;\n  try {\n    const city = selectedCity;\n    const response = await fetch(`${BASE_URL}store/categoryproducts/${dealerid}/${selectedCity}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching departments:', error);\n    throw error;\n  }\n});\nexport const fetchMostViewedstores = createAsyncThunk('stores/fetchMostViewed', async _ref2 => {\n  let {\n    selectedCity\n  } = _ref2;\n  try {\n    const city = selectedCity;\n    const pincode = \"570009\";\n    const response = await fetch(`${BASE_URL}stores/mostview/${city}/${pincode}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {}\n});\nconst shoppageSlice = createSlice({\n  name: 'mostViewed',\n  initialState: {\n    mostviewedproducts: [],\n    mostviewedstores: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMostViewedProducts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchMostViewedProducts.fulfilled, (state, action) => {\n      state.mostviewedproducts = action.payload.data;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(fetchMostViewedProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(fetchMostViewedstores.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchMostViewedstores.fulfilled, (state, action) => {\n      state.mostviewedstores = action.payload.data;\n      state.isLoading = false;\n      state.error = null;\n    }).addCase(fetchMostViewedstores.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default shoppageSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","fetchMostViewedProducts","_ref","dealerid","selectedCity","city","response","fetch","ok","Error","data","json","error","console","fetchMostViewedstores","_ref2","pincode","shoppageSlice","name","initialState","mostviewedproducts","mostviewedstores","isLoading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/react/website/finalcode/src/Redux/Slice/ShopPageSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nimport  BASE_URL  from '../../Config/apii';\r\n\r\nexport const fetchMostViewedProducts = createAsyncThunk(\r\n  'products/fetchMostViewedproducts',\r\n  async ({ dealerid,selectedCity }) => {\r\n    try {\r\n      \r\n      const city=selectedCity;\r\n      const response = await fetch(`${BASE_URL}store/categoryproducts/${dealerid}/${selectedCity}`);\r\n    \r\n   \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n    throw error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchMostViewedstores = createAsyncThunk(\r\n  'stores/fetchMostViewed',\r\n  async ({ selectedCity }) => {\r\n    try {\r\n      const city=selectedCity;\r\n      const pincode=\"570009\";\r\n     \r\n      const response = await fetch(`${BASE_URL}stores/mostview/${city}/${pincode}`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n);\r\n\r\nconst shoppageSlice = createSlice({\r\n  name: 'mostViewed',\r\n  initialState: { mostviewedproducts: [], mostviewedstores: [], isLoading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchMostViewedProducts.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMostViewedProducts.fulfilled, (state, action) => {\r\n     \r\n        state.mostviewedproducts = action.payload.data;\r\n        state.isLoading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMostViewedProducts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(fetchMostViewedstores.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMostViewedstores.fulfilled, (state, action) => {\r\n        state.mostviewedstores = action.payload.data;\r\n        state.isLoading = false;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchMostViewedstores.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default shoppageSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}